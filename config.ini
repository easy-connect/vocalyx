# =====================================================================
# Vocalyx Configuration File
# =====================================================================

[WHISPER]
# Mod√®le Whisper √† utiliser
# Options: tiny, base, small, medium, large-v2, large-v3
# tiny: Le plus rapide, moins pr√©cis (1GB RAM, ~32x temps r√©el)
# base: Rapide, pr√©cision correcte (1GB RAM, ~16x temps r√©el)
# small: Bon √©quilibre (2GB RAM, ~6x temps r√©el) ‚≠ê RECOMMAND√â
# medium: Tr√®s pr√©cis, plus lent (5GB RAM, ~2x temps r√©el)
# large-v3: Le plus pr√©cis, tr√®s lent (10GB RAM, ~1x temps r√©el)
model = ./models/transcribe/openai/whisper-small

# Device de calcul
# Options: cpu, cuda (GPU NVIDIA), auto
device = cpu

# Type de calcul
# Options: int8, int8_float16, float16, float32
# int8: Le plus rapide, moins pr√©cis (CPU uniquement)
# float16: Bon √©quilibre (GPU)
# float32: Le plus pr√©cis (CPU/GPU)
compute_type = int8

# Nombre de threads CPU pour l'inf√©rence
# Recommand√©: nombre de c≈ìurs CPU - 2
cpu_threads = 8

# Langue par d√©faut (forcer la langue acc√©l√®re la transcription)
# Options: fr, en, es, de, it, pt, nl, etc.
# Laisser vide pour d√©tection automatique
language = fr


[PERFORMANCE]
# Nombre de workers pour le traitement parall√®le
# Recommand√©: entre 2 et 8 selon votre CPU
# Plus = plus rapide mais plus de RAM utilis√©e
max_workers = 2

# Longueur des segments audio en millisecondes
# Pour audios longs, ils seront d√©coup√©s en segments de cette taille
# 60000ms = 1 minute par segment
# Valeurs recommand√©es: 45000-90000
segment_length_ms = 45000

# Activer VAD (Voice Activity Detection)
# true: Ignore les silences = plus rapide + segments plus pertinents
# false: Transcrit tout l'audio
vad_enabled = true

# Beam size pour le d√©codage (qualit√© vs vitesse)
# Plus √©lev√© = meilleure qualit√© mais plus lent
# Recommand√©: 5 (√©quilibre), max: 10
beam_size = 5

# Temperature pour le sampling
# 0.0 = d√©terministe (recommand√© pour vitesse)
# 0.0-1.0 = plus de variabilit√©
temperature = 0.0


[LIMITS]
# Taille maximale des fichiers upload√©s (en MB)
max_file_size_mb = 100

# Limite de requ√™tes par minute (rate limiting)
# Protection contre les abus
rate_limit_per_minute = 10

# Extensions de fichiers autoris√©es (s√©par√©es par des virgules)
allowed_extensions = wav,mp3,m4a,flac,ogg,webm


[PATHS]
# R√©pertoire pour les uploads temporaires
upload_dir = ./tmp_uploads

# Chemin de la base de donn√©es SQLite
# Format: sqlite:///./chemin/vers/db.db
database_path = sqlite:///./transcriptions.db

# R√©pertoire des templates HTML
templates_dir = templates


[VAD]
# VAD (Voice Activity Detection) - Param√®tres avanc√©s
# Ces param√®tres affectent la d√©tection de parole avec pydub

# Dur√©e minimum de silence pour consid√©rer une pause (en ms)
# Plus √©lev√© = segments plus longs
# Recommand√©: 300-700
min_silence_len = 500

# Seuil de silence en dB
# Plus n√©gatif = plus sensible (d√©tecte plus de silences)
# Recommand√©: -35 √† -45
# -30: Tr√®s peu sensible (garde beaucoup de bruit)
# -40: √âquilibr√© ‚≠ê
# -50: Tr√®s sensible (risque de couper des mots)
silence_thresh = -40

# Seuil VAD pour faster-whisper (0.0-1.0)
# Plus √©lev√© = plus strict sur la d√©tection de parole
# Recommand√©: 0.5
vad_threshold = 0.5

# Dur√©e minimum de parole pour √™tre consid√©r√©e (en ms)
# √âvite les faux positifs (bruits courts)
min_speech_duration_ms = 250

# Dur√©e minimum de silence entre segments (en ms)
# √âvite de fragmenter la parole continue
min_silence_duration_ms = 500


[LOGGING]
# Configuration du logging

# Niveau de log
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
level = DEBUG

# Activer les logs dans un fichier
# true = logs dans logs/vocalyx.log
# false = logs uniquement en console
file_enabled = true

# Chemin du fichier de log (si file_enabled = true)
file_path = logs/vocalyx.log

# Activer les couleurs dans la console (terminal)
# Rend les logs plus lisibles en d√©veloppement
colored = true


# =====================================================================
# MODULE D'ENRICHISSEMENT (LLM)
# =====================================================================

[ENRICHMENT]
# Activer/d√©sactiver l'enrichissement
enabled = true

# Worker Settings
max_workers = 2
poll_interval_seconds = 15
batch_size = 3
max_retries = 3
retry_delay_seconds = 60

# Model Settings
model_path = models/enrichment/Phi-3-mini-4k-instruct-q4.gguf
model_type = mistral
n_ctx = 2048
n_threads = 8
n_batch = 1024

# Generation Settings
temperature = 0.5
top_p = 0.9
top_k = 40
repeat_penalty = 1.1
max_tokens = 250

# Processing Limits
max_transcription_chars = 15000
min_transcription_chars = 100

# Features
generate_title = true
generate_summary = true
generate_bullets = true
generate_sentiment = true
generate_topics = false

# Language
prompt_language = fr
output_language = fr

# =====================================================================
# PROFILS DE CONFIGURATION RECOMMAND√âS
# =====================================================================
#
# üöÄ VITESSE MAXIMALE (call centers courts, temps r√©el souhait√©)
# ---------------------------------------------------------------------
# [WHISPER]
# model = tiny
# [PERFORMANCE]
# max_workers = 8
# segment_length_ms = 45000
# beam_size = 3
# [VAD]
# vad_enabled = true
# silence_thresh = -35
#
# ‚öñÔ∏è √âQUILIBRE (recommand√© pour production)
# ---------------------------------------------------------------------
# [WHISPER]
# model = small
# [PERFORMANCE]
# max_workers = 4
# segment_length_ms = 60000
# beam_size = 5
# [VAD]
# vad_enabled = true
# silence_thresh = -40
#
# üéØ PR√âCISION MAXIMALE (appels importants, pas de contrainte temps)
# ---------------------------------------------------------------------
# [WHISPER]
# model = medium
# [PERFORMANCE]
# max_workers = 2
# segment_length_ms = 90000
# beam_size = 10
# temperature = 0.2
# [VAD]
# vad_enabled = true
# silence_thresh = -45
#
# üíº PRODUCTION HAUTE CHARGE (serveur puissant, multi-utilisateurs)
# ---------------------------------------------------------------------
# [WHISPER]
# model = small
# device = cuda  # Si GPU disponible
# compute_type = float16
# [PERFORMANCE]
# max_workers = 8
# [LIMITS]
# rate_limit_per_minute = 30
#
# =====================================================================